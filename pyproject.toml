[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "asynchrony"
authors = [
    {name = "Gram", email = "gram@orsinium.dev"},
]
license = {file = "LICENSE"}
readme = "README.md"
requires-python = ">=3.8"
dynamic = ["version", "description"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Framework :: AsyncIO",
    "Framework :: aiohttp",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Networking",
    "Typing :: Typed",
]
keywords = [
    "async",
    "asyncio",
    "aiohttp",
    "framework",
]
dependencies = []

[project.optional-dependencies]
test = ["pytest", "pytest-asyncio", "pytest-cov"]

[project.urls]
Source = "https://github.com/orsinium-labs/asynchrony"

[tool.mypy]
files = ["asynchrony"]
python_version = 3.9
ignore_missing_imports = true
# follow_imports = "silent"
show_error_codes = true
check_untyped_defs = true
no_implicit_optional = true
strict_equality = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.isort]
profile = "django"
lines_after_imports = 2
skip = ".venvs/"

[tool.pytest.ini_options]
addopts = [
    "--cov=asynchrony",
    "--cov-report=html",
    "--cov-report=term-missing:skip-covered",
    "--cov-fail-under=95",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING",
]

[tool.coverage.run]
branch = true
